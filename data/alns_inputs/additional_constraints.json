{
    "is_feasible": [
        "# Ensure the total cost does not exceed the budget\nif self.get_total_cost() > self.problem.budget:\n    return False\n\n# Ensure there are at least two kid-friendly attractions per day\nkid_friendly_count = sum(1 for loc in self.visited_attractions if self.problem.locations[loc]['type'] == 'attraction' and self.problem.locations[loc].get('kid_friendly', False))\nif kid_friendly_count < 2 * self.num_days:\n    return False"
    ],
    "is_feasible_insertion": [
        "# Ensure the insertion does not exceed the budget\nif self.get_total_cost() + self.problem.locations[location_idx]['cost'] > self.problem.budget:\n    return False\n\n# Ensure the location is kid-friendly if it's an attraction\nif self.problem.locations[location_idx]['type'] == 'attraction' and not self.problem.locations[location_idx].get('kid_friendly', False):\n    return False"
    ]
}