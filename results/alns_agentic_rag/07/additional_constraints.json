{
    "is_feasible": [
        "# Check for budget constraint as a percentage of total budget",
        "total_cost = self.get_total_cost()",
        "if total_cost > self.problem.budget * 0.95:  # Allow up to 95% of budget",
        "    return False",
        "",
        "# Check for minimum satisfaction score for each attraction",
        "for loc_idx, _, _, _ in route:",
        "    if self.problem.locations[loc_idx][\"type\"] == \"attraction\":",
        "        satisfaction = self.problem.locations[loc_idx].get(\"satisfaction\", 0)",
        "        if satisfaction < 3:  # Minimum satisfaction score of 3",
        "            return False"
    ],
    "is_feasible_insertion": [
        "# Check for budget constraint as a percentage of total budget",
        "total_cost = self.get_total_cost() + arr_transit_cost + loc_cost + dep_transit_cost",
        "if total_cost > self.problem.budget * 0.95:  # Allow up to 95% of budget",
        "    return False",
        "",
        "# Check for minimum satisfaction score for each attraction",
        "if location_type == \"attraction\":",
        "    satisfaction = self.problem.locations[location_idx].get(\"satisfaction\", 0)",
        "    if satisfaction < 3:  # Minimum satisfaction score of 3",
        "        return False"
    ]
}